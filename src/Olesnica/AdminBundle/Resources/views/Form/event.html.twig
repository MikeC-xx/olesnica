{% extends 'OlesnicaAdminBundle:Form:form.html.twig' %}

{% block content %}
{% set startTimeIsNull = form.vars.value.startTime is null %}
{% set finishDateIsNull = form.vars.value.finishDate is null %}
{% set finishTimeIsNull = form.vars.value.finishTime is null %}
<div class="panel panel-default">
    <div class="panel-heading">
    </div>
    <div class="panel-body">
      {{ form_start(form) }}
        {{ form_row(form.title) }}
        {{ form_row(form.performance) }}
        <div class="form-group">
          <label class="col-sm-2 control-label required">Začátek akce</label>
          <div class="col-sm-10">
            <div class="form-box">
              {{ form_row(form.startDate) }}
              <div class="form-group">
                <div class="col-sm-2 checkbox-label">
                  {{ form_widget(form.setStartTime, { 'attr': { 'checked': not startTimeIsNull }}) }}
                </div>
              </div>
              {{ form_row(form.startTime, { 'row_attr': { 'id': 'start-time', 'class': (startTimeIsNull ? 'hidden' : '') }}) }}
            </div>
          </div>
        </div>
        <div class="form-group">
          <div class="col-sm-2 checkbox-label">
            {{ form_widget(form.setFinishDate, { 'attr': { 'checked': not finishDateIsNull }}) }}
          </div>
        </div>
        <div id="finish-date" class="form-group{{ (finishDateIsNull ? ' hidden' : '') }}">
          <label class="col-sm-2 control-label required">Konec akce</label>
          <div class="col-sm-10">
            <div class="form-box">
              {{ form_row(form.finishDate) }}
              <div class="form-group">
                <div class="col-sm-2 checkbox-label">
                  {{ form_widget(form.setFinishTime, { 'attr': { 'checked': not finishTimeIsNull }}) }}
                </div>
              </div>
              {{ form_row(form.finishTime, { 'row_attr': { 'id': 'finish-time', 'class': (finishTimeIsNull ? 'hidden' : '') }}) }}
            </div>
          </div>
        </div>
        {{ form_row(form.location) }}
        <div class="form-group">
          <div class="col-sm-2"></div>
          <div class="col-sm-10">
            <div id="location-picker" class="location-picker"></div>
          </div>
        </div>
        {{ form_row(form.shortDescription) }}
        {{ form_row(form.longDescription) }}
        <div class="form-group">
          {{ form_label(form.attachments) }}
          <div class="col-sm-10">
            <div class="attachments" data-prototype="{{ form_widget(form.attachments.vars.prototype.file)|e }}">
              {% for attachment in form.attachments %}
              <div class="attachment-link">
                <div class="attachment attachment--deleted">
                  <div class="attachment-icon attachment-docx"></div>
                  <div class="attachment-filename hidden-xs"><small>{{ attachment.vars.value.path }}</small></div>
                  <div class="attachment-title">{{ attachment.vars.value.title }}</div>
                  <div class="clearfix hidden-xs"></div>
                  <div class="btn btn-danger btn-xs btn-delete">Smazat</div>
                  <div class="btn btn-primary btn-xs btn-cancel hidden">Zrušit smazání</div>
                </div>
              </div>
              {% endfor %}
            </div>
          </div>
        </div>
        <div class="form-group form-footer text-center offset-top">
          <a href="{{ path('olesnica_admin_events') }}" class="btn btn-default">Zrušit</a>
          {{ form_widget(form.save) }}
        </div>
        {{ form_widget(form.latitude) }}
        {{ form_widget(form.longitude) }}
        {{ form_widget(form._token) }}
      {{ form_end(form, {'render_rest': false}) }}
    </div>
</div>
{% endblock %}

{% block script %}
  <script type="text/javascript">
    $(document).ready(function() {
      var setStartTime = function() {
        if ($('.set-start-time').prop('checked')) {
          $('#start-time').removeClass('hidden');
        } else {
          $('#start-time').addClass('hidden');
        }
      }
      var setFinishDate = function() {
        if ($('.set-finish-date').prop('checked')) {
          $('#finish-date').removeClass('hidden');
        } else {
          $('#finish-date').addClass('hidden');
        }
      }
      var setFinishTime = function() {
        if ($('.set-finish-time').prop('checked')) {
          $('#finish-time').removeClass('hidden');
        } else {
          $('#finish-time').addClass('hidden');
        }
      }
      $('.set-start-time').change(setStartTime);
      $('.set-finish-date').change(setFinishDate);
      $('.set-finish-time').change(setFinishTime);

      $('.attachment').each(function() {
        var attachment = $(this);
        var btnDelete = attachment.find('.btn-delete');
        var btnCancel = attachment.find('.btn-cancel');
        btnDelete.click(function() {
          attachment.addClass('attachment--deleted');
          btnDelete.addClass('hidden');
          btnCancel.removeClass('hidden');
        });
        btnCancel.click(function() {
          attachment.removeClass('attachment--deleted');
          btnDelete.removeClass('hidden');
          btnCancel.addClass('hidden');
        });
      });

      /*
      $('form').submit(function() {
        var form = $(this);
        var url = form.prop('action');
        var formData = form.serializeArray();
        $.post(url, formData).done(function(data) {
          console.log(data);
        });
        return false;
      });
      */
      $('form').on('keyup keypress', function(e) {
        var code = e.keyCode || e.which;
        if (code == 13) {
          e.preventDefault();
          return false;
        }
      });
    });
  </script>
  <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false&amp;libraries=places&amp;language=cs"></script>
  <script type="text/javascript" src="{{ asset('assets/js/locationpicker.jquery.min.js') }}"></script>
  <script type="text/javascript">
    $('#location-picker').locationpicker({
      location: {
        latitude: {{ form.vars.value.latitude }},
        longitude: {{ form.vars.value.longitude }}
      },
      scrollwheel: false,
      radius: 150,
      inputBinding:{
        latitudeInput: $('.latitude'),
        longitudeInput: $('.longitude'),
        //radiusInput: $('#us3-radius'),
        locationNameInput: $('.location')
      },
      enableAutocomplete: true,
      onchanged: function (currentLocation, radius, isMarkerDropped) {
            // Uncomment line below to show alert on each Location Changed event
            //alert("Location changed. New location (" + currentLocation.latitude + ", " + currentLocation.longitude + ")");
      }
    });
  </script>
  {% include('OlesnicaAdminBundle:Form:tinymce.html.twig') %}
{% endblock %}
